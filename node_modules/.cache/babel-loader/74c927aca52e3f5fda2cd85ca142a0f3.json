{"ast":null,"code":"import { authConstants } from '../Constants';\nimport { authService } from '../Services';\nimport { history } from '../Helpers/history';\n\nconst login = (email, password) => {\n  return dispatch => {\n    try {\n      authService.login(email, password).then(user => {\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: user.payload.id,\n            firstName: user.payload.firstName,\n            email: user.payload.email,\n            phoneNumber: user.payload.phoneNumber,\n            city: user.payload.city,\n            state: user.payload.stateId,\n            class: user.payload.classId,\n            phoneVerified: user.payload.phoneVerified,\n            emailVerified: user.payload.emailVerified,\n            profilePic: user.payload.profilePic\n          }\n        });\n        return Promise.resolve;\n      });\n    } catch (err) {\n      console.log(err);\n      return Promise.reject;\n    }\n  };\n};\n\nconst setAuth = () => {\n  return dispatch => {\n    try {\n      const {\n        token,\n        user\n      } = authService.checkAuth();\n\n      if (token && user) {\n        const userData = JSON.parse(user);\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: userData.id,\n            firstName: userData.firstName,\n            email: userData.email,\n            phoneNumber: userData.phoneNumber,\n            city: userData.city,\n            state: userData.stateId,\n            class: userData.classId,\n            phoneVerified: userData.phoneVerified,\n            emailVerified: userData.emailVerified,\n            profilePic: userData.profilePic\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.REMOVE_USER_PROFILE\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: authConstants.REMOVE_USER_PROFILE\n      });\n      console.log(err, 'from auth.actions');\n    }\n  };\n};\n\nconst logout = () => {\n  return dispatch => {\n    console.log('from function');\n    authService.logout();\n    history.push('/');\n    dispatch({\n      type: authConstants.REMOVE_USER_PROFILE\n    });\n  };\n};\n\nexport const authActions = {\n  login,\n  logout,\n  setAuth\n};","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Actions/auth.actions.js"],"names":["authConstants","authService","history","login","email","password","dispatch","then","user","type","LOAD_USER_PROFILE","payload","id","firstName","phoneNumber","city","state","stateId","class","classId","phoneVerified","emailVerified","profilePic","Promise","resolve","err","console","log","reject","setAuth","token","checkAuth","userData","JSON","parse","REMOVE_USER_PROFILE","logout","push","authActions"],"mappings":"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","sourcesContent":["import { authConstants } from '../Constants'\r\nimport { authService } from '../Services'\r\nimport { history } from '../Helpers/history'\r\n\r\nconst login = (email, password) => {\r\n  return dispatch => {\r\n    try {\r\n      authService.login(email, password).then(user => {\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: user.payload.id,\r\n            firstName: user.payload.firstName,\r\n            email: user.payload.email,\r\n            phoneNumber: user.payload.phoneNumber,\r\n            city: user.payload.city,\r\n            state: user.payload.stateId,\r\n            class: user.payload.classId,\r\n            phoneVerified: user.payload.phoneVerified,\r\n            emailVerified: user.payload.emailVerified,\r\n            profilePic: user.payload.profilePic\r\n          }\r\n        })\r\n        return Promise.resolve\r\n      })\r\n    } catch (err) {\r\n      console.log(err)\r\n      return Promise.reject\r\n    }\r\n  }\r\n}\r\nconst setAuth = () => {\r\n  return dispatch => {\r\n    try {\r\n      const { token, user } = authService.checkAuth()\r\n      if (token && user) {\r\n        const userData = JSON.parse(user)\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: userData.id,\r\n            firstName: userData.firstName,\r\n            email: userData.email,\r\n            phoneNumber: userData.phoneNumber,\r\n            city: userData.city,\r\n            state: userData.stateId,\r\n            class: userData.classId,\r\n            phoneVerified: userData.phoneVerified,\r\n            emailVerified: userData.emailVerified,\r\n            profilePic: userData.profilePic\r\n          }\r\n        })\r\n      } else {\r\n        dispatch({ type: authConstants.REMOVE_USER_PROFILE })\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: authConstants.REMOVE_USER_PROFILE })\r\n      console.log(err, 'from auth.actions')\r\n    }\r\n  }\r\n}\r\nconst logout = () => {\r\n  return dispatch => {\r\n    console.log('from function')\r\n    authService.logout()\r\n    history.push('/')\r\n    dispatch({\r\n      type: authConstants.REMOVE_USER_PROFILE\r\n    })\r\n  }\r\n}\r\nexport const authActions = {\r\n  login,\r\n  logout,\r\n  setAuth\r\n}\r\n"]},"metadata":{},"sourceType":"module"}