{"ast":null,"code":"import { authConstants } from \"../Constants\";\nimport { authService } from \"../Services\";\nimport { history } from \"../Helpers/history\";\n\nconst login = (email, password) => {\n  return dispatch => {\n    authService.login(email, password).then(result => {\n      console.log(\"result in actions\", result);\n\n      if (result.error) {\n        dispatch({\n          type: authConstants.LOAD_ERROR_MSG,\n          payload: {\n            status: result.status,\n            message: result.message\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: result._id,\n            username: result.username,\n            role: result.role\n          }\n        });\n        window.localStorage.setItem(\"token\", result.accessToken);\n        window.localStorage.setItem(\"refreshToken\", result.refreshToken);\n        window.localStorage.setItem(\"expiresIn\", result.expiresIn);\n        window.localStorage.setItem(\"userId\", result.userId);\n        window.localStorage.setItem(\"role\", result.role);\n      }\n    });\n    return Promise.resolve;\n  };\n};\n\nconst setAuth = () => {\n  return dispatch => {\n    try {\n      const {\n        token,\n        user\n      } = authService.checkAuth();\n\n      if (token && user) {\n        const userData = JSON.parse(user);\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: userData._id,\n            username: userData.username\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.REMOVE_USER_PROFILE\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: authConstants.REMOVE_USER_PROFILE\n      });\n      console.log(err, \"from auth.actions\");\n    }\n  };\n};\n\nconst logout = () => {\n  return dispatch => {\n    console.log(\"from function\");\n    authService.logout();\n    history.push(\"/\");\n    dispatch({\n      type: authConstants.REMOVE_USER_PROFILE\n    });\n  };\n};\n\nexport const authActions = {\n  login,\n  logout,\n  setAuth\n};","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Actions/auth.actions.js"],"names":["authConstants","authService","history","login","email","password","dispatch","then","result","console","log","error","type","LOAD_ERROR_MSG","payload","status","message","LOAD_USER_PROFILE","id","_id","username","role","window","localStorage","setItem","accessToken","refreshToken","expiresIn","userId","Promise","resolve","setAuth","token","user","checkAuth","userData","JSON","parse","REMOVE_USER_PROFILE","err","logout","push","authActions"],"mappings":"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","sourcesContent":["import { authConstants } from \"../Constants\";\r\nimport { authService } from \"../Services\";\r\nimport { history } from \"../Helpers/history\";\r\n\r\nconst login = (email, password) => {\r\n  return (dispatch) => {\r\n    authService.login(email, password).then((result) => {\r\n      console.log(\"result in actions\", result);\r\n      if (result.error) {\r\n        dispatch({\r\n          type: authConstants.LOAD_ERROR_MSG,\r\n          payload: {\r\n            status: result.status,\r\n            message: result.message,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: result._id,\r\n            username: result.username,\r\n            role: result.role,\r\n          },\r\n        });\r\n        window.localStorage.setItem(\"token\", result.accessToken);\r\n        window.localStorage.setItem(\"refreshToken\", result.refreshToken);\r\n        window.localStorage.setItem(\"expiresIn\", result.expiresIn);\r\n        window.localStorage.setItem(\"userId\", result.userId);\r\n        window.localStorage.setItem(\"role\", result.role);\r\n      }\r\n    });\r\n\r\n    return Promise.resolve;\r\n  };\r\n};\r\nconst setAuth = () => {\r\n  return (dispatch) => {\r\n    try {\r\n      const { token, user } = authService.checkAuth();\r\n      if (token && user) {\r\n        const userData = JSON.parse(user);\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: userData._id,\r\n            username: userData.username,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({ type: authConstants.REMOVE_USER_PROFILE });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: authConstants.REMOVE_USER_PROFILE });\r\n      console.log(err, \"from auth.actions\");\r\n    }\r\n  };\r\n};\r\nconst logout = () => {\r\n  return (dispatch) => {\r\n    console.log(\"from function\");\r\n    authService.logout();\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: authConstants.REMOVE_USER_PROFILE,\r\n    });\r\n  };\r\n};\r\nexport const authActions = {\r\n  login,\r\n  logout,\r\n  setAuth,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}