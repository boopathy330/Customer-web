{"ast":null,"code":"import { authConstants } from \"../Constants\";\nimport { authService } from \"../Services\";\nimport { history } from \"../Helpers/history\";\n\nconst login = (email, password) => {\n  return dispatch => {\n    try {\n      authService.login(email, password).then(user => {\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: user._id,\n            username: user.username\n          }\n        });\n        return Promise.resolve;\n      });\n    } catch (err) {\n      console.log(err);\n      return Promise.reject;\n    }\n  };\n};\n\nconst setAuth = () => {\n  return dispatch => {\n    try {\n      const {\n        token,\n        user\n      } = authService.checkAuth();\n\n      if (token && user) {\n        const userData = JSON.parse(user);\n        dispatch({\n          type: authConstants.LOAD_USER_PROFILE,\n          payload: {\n            id: userData._id,\n            username: userData.username\n          }\n        });\n      } else {\n        dispatch({\n          type: authConstants.REMOVE_USER_PROFILE\n        });\n      }\n    } catch (err) {\n      dispatch({\n        type: authConstants.REMOVE_USER_PROFILE\n      });\n      console.log(err, \"from auth.actions\");\n    }\n  };\n};\n\nconst logout = () => {\n  return dispatch => {\n    console.log(\"from function\");\n    authService.logout();\n    history.push(\"/\");\n    dispatch({\n      type: authConstants.REMOVE_USER_PROFILE\n    });\n  };\n};\n\nexport const authActions = {\n  login,\n  logout,\n  setAuth\n};","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Actions/auth.actions.js"],"names":["authConstants","authService","history","login","email","password","dispatch","then","user","type","LOAD_USER_PROFILE","payload","id","_id","username","Promise","resolve","err","console","log","reject","setAuth","token","checkAuth","userData","JSON","parse","REMOVE_USER_PROFILE","logout","push","authActions"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjC,SAAQC,QAAD,IAAc;AACnB,QAAI;AACFL,MAAAA,WAAW,CAACE,KAAZ,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCE,IAAnC,CAAyCC,IAAD,IAAU;AAChDF,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAET,aAAa,CAACU,iBADb;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAEJ,IAAI,CAACK,GADF;AAEPC,YAAAA,QAAQ,EAAEN,IAAI,CAACM;AAFR;AAFF,SAAD,CAAR;AAOA,eAAOC,OAAO,CAACC,OAAf;AACD,OATD;AAUD,KAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOF,OAAO,CAACK,MAAf;AACD;AACF,GAhBD;AAiBD,CAlBD;;AAmBA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAQf,QAAD,IAAc;AACnB,QAAI;AACF,YAAM;AAAEgB,QAAAA,KAAF;AAASd,QAAAA;AAAT,UAAkBP,WAAW,CAACsB,SAAZ,EAAxB;;AACA,UAAID,KAAK,IAAId,IAAb,EAAmB;AACjB,cAAMgB,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWlB,IAAX,CAAjB;AACAF,QAAAA,QAAQ,CAAC;AACPG,UAAAA,IAAI,EAAET,aAAa,CAACU,iBADb;AAEPC,UAAAA,OAAO,EAAE;AACPC,YAAAA,EAAE,EAAEY,QAAQ,CAACX,GADN;AAEPC,YAAAA,QAAQ,EAAEU,QAAQ,CAACV;AAFZ;AAFF,SAAD,CAAR;AAOD,OATD,MASO;AACLR,QAAAA,QAAQ,CAAC;AAAEG,UAAAA,IAAI,EAAET,aAAa,CAAC2B;AAAtB,SAAD,CAAR;AACD;AACF,KAdD,CAcE,OAAOV,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAET,aAAa,CAAC2B;AAAtB,OAAD,CAAR;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,mBAAjB;AACD;AACF,GAnBD;AAoBD,CArBD;;AAsBA,MAAMW,MAAM,GAAG,MAAM;AACnB,SAAQtB,QAAD,IAAc;AACnBY,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAlB,IAAAA,WAAW,CAAC2B,MAAZ;AACA1B,IAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACAvB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,aAAa,CAAC2B;AADb,KAAD,CAAR;AAGD,GAPD;AAQD,CATD;;AAUA,OAAO,MAAMG,WAAW,GAAG;AACzB3B,EAAAA,KADyB;AAEzByB,EAAAA,MAFyB;AAGzBP,EAAAA;AAHyB,CAApB","sourcesContent":["import { authConstants } from \"../Constants\";\r\nimport { authService } from \"../Services\";\r\nimport { history } from \"../Helpers/history\";\r\n\r\nconst login = (email, password) => {\r\n  return (dispatch) => {\r\n    try {\r\n      authService.login(email, password).then((user) => {\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: user._id,\r\n            username: user.username,\r\n          },\r\n        });\r\n        return Promise.resolve;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      return Promise.reject;\r\n    }\r\n  };\r\n};\r\nconst setAuth = () => {\r\n  return (dispatch) => {\r\n    try {\r\n      const { token, user } = authService.checkAuth();\r\n      if (token && user) {\r\n        const userData = JSON.parse(user);\r\n        dispatch({\r\n          type: authConstants.LOAD_USER_PROFILE,\r\n          payload: {\r\n            id: userData._id,\r\n            username: userData.username,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({ type: authConstants.REMOVE_USER_PROFILE });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: authConstants.REMOVE_USER_PROFILE });\r\n      console.log(err, \"from auth.actions\");\r\n    }\r\n  };\r\n};\r\nconst logout = () => {\r\n  return (dispatch) => {\r\n    console.log(\"from function\");\r\n    authService.logout();\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: authConstants.REMOVE_USER_PROFILE,\r\n    });\r\n  };\r\n};\r\nexport const authActions = {\r\n  login,\r\n  logout,\r\n  setAuth,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}