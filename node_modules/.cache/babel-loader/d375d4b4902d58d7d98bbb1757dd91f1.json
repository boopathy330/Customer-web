{"ast":null,"code":"var _jsxFileName = \"/home/boopathy/work/learnings/Project/src/Pages/TransactionPage/TransactionPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { transactionActions } from \"../../Actions\";\nimport { Table, DatePicker, Tag } from \"antd\";\nimport moment from \"moment\";\nexport default function TransactionPage() {\n  const transactionList = useSelector(state => state.transactions.transactionData);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(transactionActions.getAllTransactions());\n  }, [dispatch]);\n  const dateFormat = \"YYYY-MM-DD\";\n  const columns = [{\n    title: \"trasaction id\",\n    dataIndex: \"_id\",\n    key: \"_id\"\n  }, {\n    title: \"products\",\n    key: \"productObjects\",\n    dataIndex: \"productObjects\",\n    render: productObjects => /*#__PURE__*/React.createElement(React.Fragment, null, productObjects.map(product => {\n      return /*#__PURE__*/React.createElement(Tag, {\n        key: product._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }\n      }, product.name.toUpperCase());\n    }))\n  }, {\n    title: /*#__PURE__*/React.createElement(DatePicker, {\n      placeholder: \"date\",\n      onChange: (date, dateString) => {\n        console.log(\"e\", dateString);\n        dispatch(transactionActions.getAllTransactions(dateString));\n      },\n      format: dateFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }),\n    dataIndex: \"createdAt\",\n    key: \"createdAt\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"components-table-demo-nested\",\n    columns: columns,\n    dataSource: transactionList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Pages/TransactionPage/TransactionPage.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","transactionActions","Table","DatePicker","Tag","moment","TransactionPage","transactionList","state","transactions","transactionData","dispatch","getAllTransactions","dateFormat","columns","title","dataIndex","key","render","productObjects","map","product","_id","name","toUpperCase","date","dateString","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,GAA5B,QAAuC,MAAvC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,eAAe,GAAGR,WAAW,CAChCS,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,eADG,CAAnC;AAGA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACV,kBAAkB,CAACW,kBAAnB,EAAD,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;AAGA,QAAME,UAAU,GAAG,YAAnB;AAEA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,SAAS,EAAE,KAArC;AAA4CC,IAAAA,GAAG,EAAE;AAAjD,GADc,EAEd;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEE,IAAAA,GAAG,EAAE,gBAFP;AAGED,IAAAA,SAAS,EAAE,gBAHb;AAIEE,IAAAA,MAAM,EAAGC,cAAD,iBACN,0CACGA,cAAc,CAACC,GAAf,CAAoBC,OAAD,IAAa;AAC/B,0BAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,OAAO,CAACE,IAAR,CAAaC,WAAb,EAAxB,CAAP;AACD,KAFA,CADH;AALJ,GAFc,EAcd;AACET,IAAAA,KAAK,eACH,oBAAC,UAAD;AACE,MAAA,WAAW,EAAC,MADd;AAEE,MAAA,QAAQ,EAAE,CAACU,IAAD,EAAOC,UAAP,KAAsB;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,UAAjB;AACAf,QAAAA,QAAQ,CAACV,kBAAkB,CAACW,kBAAnB,CAAsCc,UAAtC,CAAD,CAAR;AACD,OALH;AAME,MAAA,MAAM,EAAEb,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWEG,IAAAA,SAAS,EAAE,WAXb;AAYEC,IAAAA,GAAG,EAAE;AAZP,GAdc,CAAhB;AA8BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,OAAO,EAAEH,OAFX;AAGE,IAAA,UAAU,EAAEP,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA+BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { transactionActions } from \"../../Actions\";\nimport { Table, DatePicker, Tag } from \"antd\";\nimport moment from \"moment\";\n\nexport default function TransactionPage() {\n  const transactionList = useSelector(\n    (state) => state.transactions.transactionData\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(transactionActions.getAllTransactions());\n  }, [dispatch]);\n  const dateFormat = \"YYYY-MM-DD\";\n\n  const columns = [\n    { title: \"trasaction id\", dataIndex: \"_id\", key: \"_id\" },\n    {\n      title: \"products\",\n      key: \"productObjects\",\n      dataIndex: \"productObjects\",\n      render: (productObjects) => (\n        <>\n          {productObjects.map((product) => {\n            return <Tag key={product._id}>{product.name.toUpperCase()}</Tag>;\n          })}\n        </>\n      ),\n    },\n    {\n      title: (\n        <DatePicker\n          placeholder=\"date\"\n          onChange={(date, dateString) => {\n            console.log(\"e\", dateString);\n            dispatch(transactionActions.getAllTransactions(dateString));\n          }}\n          format={dateFormat}\n        />\n      ),\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        columns={columns}\n        dataSource={transactionList}\n      />\n      {/* <table>\n        <tr>\n          <thead>\n            <td>trasaction id</td>\n            <td>products</td>\n            <td> date</td>\n          </thead>\n        </tr>\n        {transactionList &&\n          transactionList.length > 0 &&\n          transactionList.map((list) => {\n            return (\n              <div>\n                <tr>\n                  <td>{list._id}</td>\n                  <td>{list.productId}</td>\n                  <td>{list.createdAt}</td>\n                </tr>\n              </div>\n            );\n          })}\n      </table> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}