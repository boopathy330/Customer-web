{"ast":null,"code":"import { config } from \"../Constants\";\nimport { authHeader } from \"../Utils/auth-header\";\n\nconst login = (username, password) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user_name: username,\n      password: password,\n      grant_type: \"password\"\n    })\n  };\n  return window.fetch(`http://localhost:3001/v1/user/auth/token`, requestOptions).then(handleResponse).then(result => {\n    console.log(\"response\", result);\n\n    if (result.error.status === 400) {\n      return result.error.message;\n    } else {\n      window.localStorage.setItem(\"token\", result.accessToken);\n      window.localStorage.setItem(\"refreshToken\", result.refreshToken);\n      window.localStorage.setItem(\"expiresIn\", result.expiresIn);\n      return result;\n    }\n  });\n};\n\nconst checkAuth = () => {\n  try {\n    const token = window.localStorage.getItem(\"token\");\n    const user = window.localStorage.getItem(\"user\");\n\n    if (token && user) {\n      return {\n        token,\n        user\n      };\n    } else {\n      const token = false;\n      const user = false;\n      return {\n        token,\n        user\n      };\n    }\n  } catch (err) {\n    console.log(err);\n    return Error;\n  }\n};\n\nconst logout = () => {\n  // remove user from local storage to log user out\n  const headers = authHeader();\n  const requestOptions = {\n    method: \"PUT\",\n    headers\n  };\n  return window.fetch(`https://localhost:3001/v1/users/revoke/token`, requestOptions).then(handleResponse).then(data => {\n    window.localStorage.removeItem(\"token\");\n    window.localStorage.removeItem(\"user\");\n    return Promise.resolve;\n  });\n};\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n    return data;\n  });\n}\n\nexport const authService = {\n  login,\n  logout,\n  checkAuth\n};","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Services/auth.service.js"],"names":["config","authHeader","login","username","password","requestOptions","method","headers","body","JSON","stringify","user_name","grant_type","window","fetch","then","handleResponse","result","console","log","error","status","message","localStorage","setItem","accessToken","refreshToken","expiresIn","checkAuth","token","getItem","user","err","Error","logout","data","removeItem","Promise","resolve","response","text","parse","authService"],"mappings":"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","sourcesContent":["import { config } from \"../Constants\";\r\nimport { authHeader } from \"../Utils/auth-header\";\r\n\r\nconst login = (username, password) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      user_name: username,\r\n      password: password,\r\n      grant_type: \"password\",\r\n    }),\r\n  };\r\n  return window\r\n    .fetch(`http://localhost:3001/v1/user/auth/token`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((result) => {\r\n      console.log(\"response\", result);\r\n      if (result.error.status === 400) {\r\n        return result.error.message;\r\n      } else {\r\n        window.localStorage.setItem(\"token\", result.accessToken);\r\n        window.localStorage.setItem(\"refreshToken\", result.refreshToken);\r\n        window.localStorage.setItem(\"expiresIn\", result.expiresIn);\r\n        return result;\r\n      }\r\n    });\r\n};\r\n\r\nconst checkAuth = () => {\r\n  try {\r\n    const token = window.localStorage.getItem(\"token\");\r\n    const user = window.localStorage.getItem(\"user\");\r\n    if (token && user) {\r\n      return { token, user };\r\n    } else {\r\n      const token = false;\r\n      const user = false;\r\n      return { token, user };\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    return Error;\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  // remove user from local storage to log user out\r\n  const headers = authHeader();\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers,\r\n  };\r\n\r\n  return window\r\n    .fetch(`https://localhost:3001/v1/users/revoke/token`, requestOptions)\r\n    .then(handleResponse)\r\n    .then((data) => {\r\n      window.localStorage.removeItem(\"token\");\r\n      window.localStorage.removeItem(\"user\");\r\n      return Promise.resolve;\r\n    });\r\n};\r\n\r\nfunction handleResponse(response) {\r\n  return response.text().then((text) => {\r\n    const data = text && JSON.parse(text);\r\n    return data;\r\n  });\r\n}\r\n\r\nexport const authService = {\r\n  login,\r\n  logout,\r\n  checkAuth,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}