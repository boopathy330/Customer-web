{"ast":null,"code":"var _jsxFileName = \"/home/boopathy/work/learnings/Project/src/Pages/TransactionPage/TransactionPage.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { transactionActions } from \"../../Actions\";\nimport { Table, DatePicker, Tag, Highlighter, Space, Button } from \"antd\";\nimport moment from \"moment\";\nexport default function TransactionPage() {\n  const transactionList = useSelector(state => state.transactions.transactionData);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(transactionActions.getAllTransactions());\n  }, [dispatch]);\n  const dateFormat = \"YYYY-MM-DD\";\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      ref: node => {\n        this.searchInput = node;\n      },\n      placeholder: `Search ${dataIndex}`,\n      value: selectedKeys[0],\n      onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n      onPressEnter: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n      style: {\n        width: 188,\n        marginBottom: 8,\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => this.handleSearch(selectedKeys, confirm, dataIndex),\n      icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.handleReset(clearFilters),\n      size: \"small\",\n      style: {\n        width: 90\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Reset\"))),\n    filterIcon: filtered => /*#__PURE__*/React.createElement(SearchOutlined, {\n      style: {\n        color: filtered ? \"#1890ff\" : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n      highlightStyle: {\n        backgroundColor: \"#ffc069\",\n        padding: 0\n      },\n      searchWords: [this.state.searchText],\n      autoEscape: true,\n      textToHighlight: text.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }) : text\n  });\n\n  const columns = [{\n    title: \"trasaction id\",\n    dataIndex: \"_id\",\n    key: \"_id\"\n  }, {\n    title: \"products\",\n    key: \"productObjects\",\n    dataIndex: \"productObjects\",\n    render: productObjects => /*#__PURE__*/React.createElement(React.Fragment, null, productObjects.map(product => {\n      return /*#__PURE__*/React.createElement(Tag, {\n        key: product._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }\n      }, product.name.toUpperCase());\n    }))\n  }, {\n    title: /*#__PURE__*/React.createElement(DatePicker, {\n      defaultValue: moment(\"2015/01/01\", dateFormat),\n      onChange: (date, dateString) => {\n        console.log(\"e\", dateString);\n        dispatch(transactionActions.getAllTransactions(dateString));\n      },\n      format: dateFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }),\n    dataIndex: \"createdAt\",\n    key: \"createdAt\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"components-table-demo-nested\",\n    columns: columns,\n    dataSource: transactionList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/boopathy/work/learnings/Project/src/Pages/TransactionPage/TransactionPage.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","transactionActions","Table","DatePicker","Tag","Highlighter","Space","Button","moment","TransactionPage","transactionList","state","transactions","transactionData","dispatch","getAllTransactions","dateFormat","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","width","marginBottom","display","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","searchedColumn","backgroundColor","searchText","columns","title","key","productObjects","map","product","_id","name","toUpperCase","date","dateString","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,GAA5B,EAAiCC,WAAjC,EAA8CC,KAA9C,EAAqDC,MAArD,QAAmE,MAAnE;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,eAAe,GAAGX,WAAW,CAChCY,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBC,eADG,CAAnC;AAGA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACb,kBAAkB,CAACc,kBAAnB,EAAD,CAAR;AACD,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;AAGA,QAAME,UAAU,GAAG,YAAnB;;AAEAC,EAAAA,oBAAoB,GAAIC,SAAD,KAAgB;AACrCC,IAAAA,cAAc,EAAE,CAAC;AACfC,MAAAA,eADe;AAEfC,MAAAA,YAFe;AAGfC,MAAAA,OAHe;AAIfC,MAAAA;AAJe,KAAD,kBAMd;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,GAAG,EAAGC,IAAD,IAAU;AACb,aAAKC,WAAL,GAAmBD,IAAnB;AACD,OAHH;AAIE,MAAA,WAAW,EAAG,UAASP,SAAU,EAJnC;AAKE,MAAA,KAAK,EAAEG,YAAY,CAAC,CAAD,CALrB;AAME,MAAA,QAAQ,EAAGM,CAAD,IACRP,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,CAACF,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB,GAAoC,EAArC,CAPnB;AASE,MAAA,YAAY,EAAE,MACZ,KAAKC,YAAL,CAAkBT,YAAlB,EAAgCC,OAAhC,EAAyCJ,SAAzC,CAVJ;AAYE,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,YAAY,EAAE,CAA5B;AAA+BC,QAAAA,OAAO,EAAE;AAAxC,OAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAeE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKH,YAAL,CAAkBT,YAAlB,EAAgCC,OAAhC,EAAyCJ,SAAzC,CAFjB;AAGE,MAAA,IAAI,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiBX,YAAjB,CADjB;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CAfF,CAPmC;AA0CrCI,IAAAA,UAAU,EAAGC,QAAD,iBACV,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,QAAQ,GAAG,SAAH,GAAeE;AAAhC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CmC;AA6CrCC,IAAAA,QAAQ,EAAE,CAACV,KAAD,EAAQW,MAAR,KACRA,MAAM,CAACtB,SAAD,CAAN,CAAkBuB,QAAlB,GAA6BC,WAA7B,GAA2CC,QAA3C,CAAoDd,KAAK,CAACa,WAAN,EAApD,CA9CmC;AA+CrCE,IAAAA,6BAA6B,EAAGC,OAAD,IAAa;AAC1C,UAAIA,OAAJ,EAAa;AACXC,QAAAA,UAAU,CAAC,MAAM,KAAKpB,WAAL,CAAiBqB,MAAjB,EAAP,CAAV;AACD;AACF,KAnDoC;AAoDrCC,IAAAA,MAAM,EAAGC,IAAD,IACN,KAAKtC,KAAL,CAAWuC,cAAX,KAA8BhC,SAA9B,gBACE,oBAAC,WAAD;AACE,MAAA,cAAc,EAAE;AAAEiC,QAAAA,eAAe,EAAE,SAAnB;AAA8B3B,QAAAA,OAAO,EAAE;AAAvC,OADlB;AAEE,MAAA,WAAW,EAAE,CAAC,KAAKb,KAAL,CAAWyC,UAAZ,CAFf;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,eAAe,EAAEH,IAAI,CAACR,QAAL,EAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAQEQ;AA7DiC,GAAhB,CAAvB;;AAgEA,QAAMI,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,eAAT;AAA0BpC,IAAAA,SAAS,EAAE,KAArC;AAA4CqC,IAAAA,GAAG,EAAE;AAAjD,GADc,EAEd;AACED,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,GAAG,EAAE,gBAFP;AAGErC,IAAAA,SAAS,EAAE,gBAHb;AAIE8B,IAAAA,MAAM,EAAGQ,cAAD,iBACN,0CACGA,cAAc,CAACC,GAAf,CAAoBC,OAAD,IAAa;AAC/B,0BAAO,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,OAAO,CAACE,IAAR,CAAaC,WAAb,EAAxB,CAAP;AACD,KAFA,CADH;AALJ,GAFc,EAcd;AACEP,IAAAA,KAAK,eACH,oBAAC,UAAD;AACE,MAAA,YAAY,EAAE9C,MAAM,CAAC,YAAD,EAAeQ,UAAf,CADtB;AAEE,MAAA,QAAQ,EAAE,CAAC8C,IAAD,EAAOC,UAAP,KAAsB;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,UAAjB;AACAjD,QAAAA,QAAQ,CAACb,kBAAkB,CAACc,kBAAnB,CAAsCgD,UAAtC,CAAD,CAAR;AACD,OALH;AAME,MAAA,MAAM,EAAE/C,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWEE,IAAAA,SAAS,EAAE,WAXb;AAYEqC,IAAAA,GAAG,EAAE;AAZP,GAdc,CAAhB;AA8BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,8BADZ;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,UAAU,EAAE3C,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA+BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { transactionActions } from \"../../Actions\";\nimport { Table, DatePicker, Tag, Highlighter, Space, Button } from \"antd\";\nimport moment from \"moment\";\n\nexport default function TransactionPage() {\n  const transactionList = useSelector(\n    (state) => state.transactions.transactionData\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(transactionActions.getAllTransactions());\n  }, [dispatch]);\n  const dateFormat = \"YYYY-MM-DD\";\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text.toString()}\n        />\n      ) : (\n        text\n      ),\n  });\n  const columns = [\n    { title: \"trasaction id\", dataIndex: \"_id\", key: \"_id\" },\n    {\n      title: \"products\",\n      key: \"productObjects\",\n      dataIndex: \"productObjects\",\n      render: (productObjects) => (\n        <>\n          {productObjects.map((product) => {\n            return <Tag key={product._id}>{product.name.toUpperCase()}</Tag>;\n          })}\n        </>\n      ),\n    },\n    {\n      title: (\n        <DatePicker\n          defaultValue={moment(\"2015/01/01\", dateFormat)}\n          onChange={(date, dateString) => {\n            console.log(\"e\", dateString);\n            dispatch(transactionActions.getAllTransactions(dateString));\n          }}\n          format={dateFormat}\n        />\n      ),\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        className=\"components-table-demo-nested\"\n        columns={columns}\n        dataSource={transactionList}\n      />\n      {/* <table>\n        <tr>\n          <thead>\n            <td>trasaction id</td>\n            <td>products</td>\n            <td> date</td>\n          </thead>\n        </tr>\n        {transactionList &&\n          transactionList.length > 0 &&\n          transactionList.map((list) => {\n            return (\n              <div>\n                <tr>\n                  <td>{list._id}</td>\n                  <td>{list.productId}</td>\n                  <td>{list.createdAt}</td>\n                </tr>\n              </div>\n            );\n          })}\n      </table> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}